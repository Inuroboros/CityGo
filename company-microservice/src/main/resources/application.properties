server.port=8087
spring.datasource.url=jdbc:postgresql://localhost/CompaniesDB
spring.datasource.username=postgres
spring.datasource.password=admin
spring.application.name=company-crud-api


spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=org.postgresql.Driver


spring.mustache.expose-request-attributes=true

#mybatis.mapper-locations=classpath:com.example.easynotes.mappers/*.xml
#mybatis.config-location=classpath:mybatis-config.xml


#mybatis.config-location=classpath:mybatis-config.xml
#logging.level.root=WARN
#logging.level.sample.mybatis.xml.mapper=TRACE
#
#mybatis.type-aliases-package=com.example.easynotes.model
##mybatis.type-handlers-package=com.example.typehandler
#mybatis.configuration.map-underscore-to-camel-case=true
#mybatis.configuration.default-fetch-size=100
#mybatis.configuration.default-statement-timeout=30

zuul.routes.auth-service.path=/auth/**
zuul.routes.auth-service.service-id=AUTH-SERVICE

# By default, all requests to gallery service for example will start with: "/gallery/"
# What will be sent to the gallery service is what comes after the path defined,
# So, if request is "/gallery/view/1", gallery service will get "/view/1".
# In case of auth, we need to pass the "/auth/" in the path to auth service. So, set strip-prefix to false
zuul.routes.auth-service.strip-prefix=false

# Exclude authorization from sensitive headers
zuul.routes.auth-service.sensitive-headers=Cookie,Set-Cookie  